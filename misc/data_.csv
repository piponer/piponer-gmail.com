course-info,,,,,,,,,,,,,,,,,,,,,,,,
,course_code,string,primary key,,,,,,,,COMP1911,COMP9020,ENGG1811,COMP9319,COMP9313,COMP9334,COMP4418,COMP9024,COMP1531,COMP9517,COMP9417,COMP9418,COMP2521,COMP9032
,course_title,string,,,,,,,,,Computing 1A,Foundations of Computer Science,Computing for Engineers,Web Data Compression and Search,Big Data Management,Capacity Planning of Computer Systems and Networks,Knowledge Representation and Reasoning,Data Structures and Algorithms,Software Engineering Fundamentals,Computer Vision,Machine Learning and Data Mining,Advanced Topics In Statistical Machine Learning,Data Structures and Algorithms,Microprocessors and Interfacing
,course_url,string,,,,,,,,,http://cse.unsw.edu.au/~cs1911,http://www.cse.unsw.edu.au/~cs9020,http://www.cse.unsw.edu.au/~en1811,http://cse.unsw.edu.au/~cs9319,http://cse.unsw.edu.au/~cs9313,http://cse.unsw.edu.au/~cs9334,http://cse.unsw.edu.au/~cs4418,http://www.cse.unsw.edu.au/~cs9024,http://cse.unsw.edu.au/~cs1531,http://cse.unsw.edu.au/~cs9517,http://cse.unsw.edu.au/~cs9417,http://cse.unsw.edu.au/~cs9418,https://webcms3.cse.unsw.edu.au/COMP2521/19T3/,http://cse.unsw.edu.au/~cs9032/
,lecturer,string,,,,,,,,,Hayden Smith,Paul Hunter,,Raymond Wong,,,Maurice Pagnucco,Michael Thielscher,"Hayden Smith , Rob Everest","Prof Arcot Sowmya, Dr Yang Song, Prof Erik Meijering	",Michael Bain,Gustavo Batista,Ashesh Mahidadia ,Hui Guo
,admin,string,,,,,,,,,Hayden Smith,Paul Hunter,,Raymond Wong,,,Maurice Pagnucco,Michael Thielscher,"Hayden Smith , Rob Everest",Annette Spooner,Omar Ghattas,Armin Chitizadeh,,Hui Guo
,credit,string,,,,,,,,,6,6,6,6,6,6,6,6,6,6,6,6,6,6
,faculty,string,foreign key,,,,,,,,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering
,school,string,foreign key,,,,,,,,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering
,campus,string,foreign key,,,,,,,,Kensington,Kensington,Kensington,Kensington,Kensington,Kensington,Kensington,Kensington,Kensington,Kensington,Kensington,Kensington,Kensington,Kensington
,hours,int,,,,,,,,,7,4,4,5,3,4,4,4,7,4,5,4,7,5
,course_fee,int,foreign key,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
course-summary,,,,,,,,,,,,,,,,,,,,,,,,
,course-code,,primary key references course-info(course-code),,,,,,,,COMP1911,COMP9020,ENGG1811,COMP9319,COMP9313,COMP9334,COMP4418,COMP9024,COMP1531,COMP9517,COMP9417,COMP9418,COMP2521,COMP9032
,summary,,,,,,,,,,"This course introduces students to the basics of programming. Topics covered include:
- fundamental programming concepts
- the C programming language & use of a C compiler
- programming style
- program design and organisation concepts
- program testing and debugging","The official scope is: mathematical methods for designing correct and efficient programs; mathematics for algorithm analysis; logic for proving and verification.
The actual content is taken from a list of subjects that constitute the basis of the tool box of every serious practitioner of computing: set and relation theory; induction, recursion and recurrence relations; order of growth of functions; structured counting (combinatorics); discrete probability; graph theory and trees for algorithmic applications; propositional logic and boolean algebras.","The objective of this course is for students to acquire computing skills for solving problems in engineering. The course will develop the students' proficiency in a high level programming language and in using programming for problem solving. Topics: algorithms, program structure (statements, selection, iteration, functions), data types, arrays and matrices, reading and writing files, testing, code quality, simulation, animation, visualisation. The course includes practical work in labs and programming projects. ","As the amount of Web data increases, it is becoming vital to not only be able to search and retrieve this information quickly, but also to store it in a compact manner. This is especially important for mobile devices which are becoming increasingly popular. Without loss of generality, within this course, we assume Web data (excluding media content) will be in XML and its like (e.g., XHTML).
This course aims to introduce the concepts, theories, and algorithmic issues important to Web data compression and search. The course will also introduce the most recent development in various areas of Web data optimization topics, common practice, and its applications. The course is composed of the following parts:
Adaptive coding, information theory
Text compression (zip, gzip, bzip, etc)
Burrows-Wheeler Transform and backward search
XML compression
Indexing
Pattern matching and regular expression search
Distributed querying
Fast index construction
Implementation","This course introduces the core concepts and technologies involved in managing Big Data. It will first introduce the characteristics of big data and big data analysis. Then, we will present key management aspects in the context of big data projects. Next, we will learn the open-source big data management framework Hadoop. The course will introduce the overall framework and then focus on Hadoop MapReduce and its programming model. In this course, we will also introduce Spark, an open-source and memory-based distributed computing framework. In addition, we will also introduce examples of major NoSQL technologies currently widely used in the big data management ecosystem.","We live in a world that events do not happen instantly. It takes a certain amount of time to download a video from a server to your own mobile device. It takes a certain amount of time for a computer to finish the execution of an algorithm. The time to completion (or response time in performance analysis terminology) is a performance metric that computer scientists and computer engineers should be concerned about because no one wants to wait unnecessarily. If you can understand the factors that determine the response time, then you can influence those factors so that the response time is acceptable. This course will take a mathematical modelling and analytical approach to understand response time in computer systems and networks. The primary goal is to explore how mathematical modelling and mathematical methods can be used to model, analyse and design computer systems and networks so that they have good performance. There are three major topics that will be covered by this course:

Queuing analysis (Note: Queues are important because they give rise to waiting time.)
Discrete event simulation
Integer programming for network design","Knowledge Representation and Reasoning (KRR) is at the core of Artificial Intelligence. It is concerned with the representation of knowledge in symbolic form and the use of this knowledge for reasoning. This course presents current trends and research issues in Knowledge Representation and Reasoning (KRR). It enables students interested in Artificial Intelligence to deepen their knowledge in this important area and gives them a solid background for doing their own work/research in this area. The topics covered include: Commonsense reasoning, Propositional and First-order Logic, Answer set programming, Planning, Reasoning about action, Constraint programming.

This course can be a starting point for further exploration of artificial intelligence. Further courses include COMP3431/COMP9431: Robotic Software Architecture, COMP9417: Machine Learning and Data Mining, COMP9444: Neural Networks and COMP9844: Extended Neural Networks.","Data structures are about how data is stored inside a computer for effective and efficient use. An algorithm is a step-by-step process for solving a problem within a finite amount of space and time. Data structures and algorithms are not only important in software design, but also in hardware design. Being proficient in data structures and algorithms are essential for good software developers, hardware developers, and system architects.

The actual content is taken from a list of subjects that constitute the basis of the tool box of every serious practitioner of computing: data types and data structures, abstract data types, dynamic data structures, analysis of algorithms and a variety of fundamental algorithms for graphs, trees and text processing.","This course is teaches students about software engineering principles via exposure to the important practice of building correct products in effectively functioning teams.

The students are exposed to agile software practices, team collaboration and effective communication through implementing a group project based on agile software methodologies that requires them to analyse, design, build and deploy a web-based application. This course is typically taken in the semester after completing COMP 1511, but could be delayed and taken later. It provides essential background for the teamwork and project management required in many later courses.
The goal of this course is to expose the students to:

Demonstrating effective use of the python programming language
Basic elements of software engineering - derived from the life-cycle of a software system, including requirements elicitation, analysis and specification; design; construction; verification and validation; deployment;
Software engineering methodologies, processes, tools and techniques
Agile software, collaboration and communication practices
Web-based system architecture and development practices on web platforms","The course will cover topics from: Introduction, image processing, feature detection, pattern recognition, deep learning , segmentation, motion and image tracking, applications.","This course explores machine learning as the algorithmic approach to learning from data. The course also covers key aspects of data mining, which is understood as the application of machine learning tools to obtain insight from data. Algorithms are placed in the context of their theoretical foundations in order to understand their derivation and correct application. Topics include: linear models for regression and classification, local methods (nearest neighbour), neural networks, tree learning, kernel machines, unsupervised learning, ensemble learning, computational and statistical learning theory, and Bayesian learning. To expand and extend the development of theory and algorithms presented in lectures, practical applications will be given in tutorials and programming tasks during the project.","This course presents an in-depth study of statistical machine learning approaches. It aims to provide the student with a solid understanding of methods for learning and inference in structured probabilistic models, with a healthy balance of theory and practice.

It will cover topics on the semantics of direct and undirect representations in probabilistic graphical models, exact and approximate inference, and learning of model parameters and structure.","The goal of this course is to deepen your understanding of data structures and algorithms and how these can be employed effectively in the design of software systems. It is an important course in covering a range of core data structures and algorithms that will be used in context in later courses. You explore these ideas in lectres, tutorials, lab classes, and assignments. Assessment involves labs, tutes, practical lab exams, a practical final exam, and a theory exam. At the end of the course, we want you to be a solid programmer, with knowledge of a range of useful data structures and programming techniques, capable of building significant software systems in a team environment, and ready to continue with further specialised studies in computing.

Topics: An introduction the structure, analysis and usage of a range of fundamental data types and the core algorithms that operate on them, including: algorithm analysis, sorting, searching, trees, graphs, files, algorithmic strategies, analysis and measurement of programs. Labs and programming assignments in C, using a range of Unix tools.","This course is to introduce students to the basic concepts and structure of the microprocessor and microcontroller, and provide students with knowledge and skills for solving problems with microprocessor/microcontroller."
,,,,,,,,,,,,,,,,,,,,,,,,
faculty,,,,,,,,,,,,,,,,,,,,,,,,
,faculty,,primary key references course-info(faculty),,,,,,,,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering,Faculty of Engineering
,url,,,,,,,,,,https://www.engineering.unsw.edu.au/,https://www.engineering.unsw.edu.au/,https://www.engineering.unsw.edu.au/,,https://www.engineering.unsw.edu.au/,https://www.engineering.unsw.edu.au/,https://www.engineering.unsw.edu.au/,https://www.engineering.unsw.edu.au/,https://www.engineering.unsw.edu.au/,https://www.engineering.unsw.edu.au/,https://www.engineering.unsw.edu.au/,https://www.engineering.unsw.edu.au/,https://www.engineering.unsw.edu.au/,https://www.engineering.unsw.edu.au/
,,,,,,,,,,,,,,,,,,,,,,,,
school,,,,,,,,,,,,,,,,,,,,,,,,
,school,,primary key references course-info(school),,,,,,,,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering,School of Computer Science and Engineering
,url,,,,,,,,,,https://www.engineering.unsw.edu.au/computer-science-engineering/,https://www.engineering.unsw.edu.au/computer-science-engineering/,https://www.engineering.unsw.edu.au/computer-science-engineering/,,https://www.engineering.unsw.edu.au/computer-science-engineering/,https://www.engineering.unsw.edu.au/computer-science-engineering/,https://www.engineering.unsw.edu.au/computer-science-engineering/,https://www.engineering.unsw.edu.au/computer-science-engineering/,https://www.engineering.unsw.edu.au/computer-science-engineering/,https://www.engineering.unsw.edu.au/computer-science-engineering/,https://www.engineering.unsw.edu.au/computer-science-engineering/,https://www.engineering.unsw.edu.au/computer-science-engineering/,https://www.engineering.unsw.edu.au/computer-science-engineering/,https://www.engineering.unsw.edu.au/computer-science-engineering/
,,,,,,,,,,,,,,,,,,,,,,,,
map-info,,,,,,,,,,,,,,,,,,,,,,,,
,campus,,primary key references course-info(campus),,,,,,,,,,,,,,,,,,,,,
,location,,,,,,,,,,,,,,,,,,,,,,,
,url,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
fee,,,,,,,,,,,,,,,,,,,,,,,,
,course_fee,,primary key references course-info(course_fee),,,,,,,,,,,,,,,,,,,,,
,international,,,,,,,,,,5970,5910,5970,5970,5970,5970,5970,5730,5970,5970,5970,5790,5790,5790
,demestic,,,,,,,,,,5970,4470,5970,5970,5970,5970,5970,4350,5970,5970,5970,5790,4470,5790
